{"version":3,"file":"src_app_page_products_products_module_ts-es2015.js","mappings":";;;;;;;;;;;;;;;;AAAkC;AACS;AACqB;AACxB;AACxC;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO,2DAAO,iBAAiB,4BAA4B;AACpH,8DAA8D,OAAO,2DAAO,mBAAmB;AAC/F;AACA;AACA;AACA;AACA;AACA,kDAAkD,iCAAiC,4CAA4C,sEAAsE,mEAA4B,6CAA6C;AAC9Q,qCAAqC,gEAAyB,GAAG,+CAA+C,kCAAkC;AAClJ,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB,KAAK,iBAAiB;AACtB;AACA,CAAC,CAAC,iEAAiB;AACO;;;;;;;;;;;;;;;;AC9BnB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB6C;AACtC,kCAAkC;AAClC,iCAAiC;AACjC;AACP;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA,KAAK;AACL;AACA;AACA,2BAA2B;AAC3B,eAAe,4CAAU;AACzB;AACA;AACA;AACA;AACA,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,WAAW,+CAAS;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B;AAC3B;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4CAAU;AACjC;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrbkC;AACsB;AACxD;AACA,eAAe,4CAAU;AACzB,gCAAgC,0DAAiB;AACjD;AACA,mCAAmC,kDAAS;AAC5C;AACA,iCAAiC,sDAAsD;AACvF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP,2BAA2B;AAC3B;AACA;;;;;;;;;;;;;;;;ACnBwC;AACjC;AACP;AACA,WAAW,qDAAY;AACvB;;;;;;;;;;;;;;;;;ACJwD;AACjD;AACP,QAAQ,0DAAiB;AACzB,eAAe,kDAAS;AACxB;AACA;AACA;AACO;AACP,QAAQ,0DAAiB;AACzB,QAAQ,kDAAS;AACjB;AACA;;;;;;;;;;;;;;;;ACXgC;AACzB;AACP,WAAW,6CAAI;AACf;;;;;;;;;;;;;;;;ACHO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;ACVU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA+B;AACiB;AAC1D;AACgG;AAC3D;AACkB;AACT;AACA;AACC;AACP;AACxC,sDAAU;;;;;;;;;;;;;;;;;;ACV8C;AAC3B;AAC7B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,0BAA0B,qEAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;;;;;;;;;;;;;;;;AC1D7B;AACA;AACA;AACO;AACP;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC9ByC;AACc;AAER;AAG/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACjBG;AACM;AACF;AAEA;AAEyB;AAEvB;IAWlC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACnBmB;AACiB;IAOtD,YAAY,SAAZ,YAAY;IAEvB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEvD,QAAQ;IACR,CAAC;IAED,OAAO;QACL,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YAC5C,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACN,CAAC;CACF;;YArBQ,6EAAc;;AAOV,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,0LAAmC;;KAEpC,CAAC;GACW,YAAY,CAcxB;AAdwB;;;;;;;;;;;;ACRzB,+DAAe,4sBAA4sB","sources":["./node_modules/@ionic-native/barcode-scanner/__ivy_ngcc__/ngx/index.js","./node_modules/@ionic-native/core/__ivy_ngcc__/bootstrap.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/common.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/cordova-function-override.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/cordova-instance.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/cordova-property.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/cordova.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/instance-property.js","./node_modules/@ionic-native/core/__ivy_ngcc__/decorators/interfaces.js","./node_modules/@ionic-native/core/__ivy_ngcc__/index.js","./node_modules/@ionic-native/core/__ivy_ngcc__/ionic-native-plugin.js","./node_modules/@ionic-native/core/__ivy_ngcc__/util.js","./src/app/page/products/products-routing.module.ts","./src/app/page/products/products.module.ts","./src/app/page/products/products.page.ts","./src/app/page/products/products.page.html"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\nvar BarcodeScanner = /** @class */ (function (_super) {\n    __extends(BarcodeScanner, _super);\n    function BarcodeScanner() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.Encode = {\n            TEXT_TYPE: 'TEXT_TYPE',\n            EMAIL_TYPE: 'EMAIL_TYPE',\n            PHONE_TYPE: 'PHONE_TYPE',\n            SMS_TYPE: 'SMS_TYPE',\n        };\n        return _this;\n    }\n    BarcodeScanner.prototype.scan = function (options) { return cordova(this, \"scan\", { \"callbackOrder\": \"reverse\" }, arguments); };\n    BarcodeScanner.prototype.encode = function (type, data) { return cordova(this, \"encode\", {}, arguments); };\n    BarcodeScanner.pluginName = \"BarcodeScanner\";\n    BarcodeScanner.plugin = \"phonegap-plugin-barcodescanner\";\n    BarcodeScanner.pluginRef = \"cordova.plugins.barcodeScanner\";\n    BarcodeScanner.repo = \"https://github.com/phonegap/phonegap-plugin-barcodescanner\";\n    BarcodeScanner.platforms = [\"Android\", \"BlackBerry 10\", \"Browser\", \"iOS\", \"Windows\"];\nBarcodeScanner.ɵfac = /*@__PURE__*/ function () { var ɵBarcodeScanner_BaseFactory; return function BarcodeScanner_Factory(t) { return (ɵBarcodeScanner_BaseFactory || (ɵBarcodeScanner_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(BarcodeScanner)))(t || BarcodeScanner); }; }();\nBarcodeScanner.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: BarcodeScanner, factory: function (t) { return BarcodeScanner.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BarcodeScanner, [{\n        type: Injectable\n    }], null, null); })();\n    return BarcodeScanner;\n}(IonicNativePlugin));\nexport { BarcodeScanner };\n\n","export function checkReady() {\n    if (typeof process === 'undefined') {\n        var win_1 = typeof window !== 'undefined' ? window : {};\n        var DEVICE_READY_TIMEOUT_1 = 5000;\n        // To help developers using cordova, we listen for the device ready event and\n        // log an error if it didn't fire in a reasonable amount of time. Generally,\n        // when this happens, developers should remove and reinstall plugins, since\n        // an inconsistent plugin is often the culprit.\n        var before_1 = Date.now();\n        var didFireReady_1 = false;\n        win_1.document.addEventListener('deviceready', function () {\n            console.log(\"Ionic Native: deviceready event fired after \" + (Date.now() - before_1) + \" ms\");\n            didFireReady_1 = true;\n        });\n        setTimeout(function () {\n            if (!didFireReady_1 && win_1.cordova) {\n                console.warn(\"Ionic Native: deviceready did not fire within \" + DEVICE_READY_TIMEOUT_1 + \"ms. This can happen when plugins are in an inconsistent state. Try removing plugins from plugins/ and reinstalling them.\");\n            }\n        }, DEVICE_READY_TIMEOUT_1);\n    }\n}\n","import { fromEvent, Observable } from 'rxjs';\nexport var ERR_CORDOVA_NOT_AVAILABLE = { error: 'cordova_not_available' };\nexport var ERR_PLUGIN_NOT_INSTALLED = { error: 'plugin_not_installed' };\nexport function getPromise(callback) {\n    var tryNativePromise = function () {\n        if (Promise) {\n            return new Promise(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        else {\n            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\n        }\n    };\n    if (typeof window !== 'undefined' && window.angular) {\n        var doc = window.document;\n        var injector = window.angular.element(doc.querySelector('[ng-app]') || doc.body).injector();\n        if (injector) {\n            var $q = injector.get('$q');\n            return $q(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        console.warn(\"Angular 1 was detected but $q couldn't be retrieved. This is usually when the app is not bootstrapped on the html or body tag. Falling back to native promises which won't trigger an automatic digest when promises resolve.\");\n    }\n    return tryNativePromise();\n}\nexport function wrapPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    var pluginResult, rej;\n    var p = getPromise(function (resolve, reject) {\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return resolve(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return reject(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject);\n        }\n        rej = reject;\n    });\n    // Angular throws an error on unhandled rejection, but in this case we have already printed\n    // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n    // to error\n    if (pluginResult && pluginResult.error) {\n        p.catch(function () { });\n        typeof rej === 'function' && rej(pluginResult.error);\n    }\n    return p;\n}\nfunction wrapOtherPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return getPromise(function (resolve, reject) {\n        var pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts);\n        if (pluginResult) {\n            if (pluginResult.error) {\n                reject(pluginResult.error);\n            }\n            else if (pluginResult.then) {\n                pluginResult.then(resolve).catch(reject);\n            }\n        }\n        else {\n            reject({ error: 'unexpected_error' });\n        }\n    });\n}\nfunction wrapObservable(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return new Observable(function (observer) {\n        var pluginResult;\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.next(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.error(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n        }\n        if (pluginResult && pluginResult.error) {\n            observer.error(pluginResult.error);\n            observer.complete();\n        }\n        return function () {\n            try {\n                if (opts.clearFunction) {\n                    if (opts.clearWithArgs) {\n                        return callCordovaPlugin(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                    }\n                    return callCordovaPlugin(pluginObj, opts.clearFunction, []);\n                }\n            }\n            catch (e) {\n                console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                console.warn(e);\n            }\n        };\n    });\n}\n/**\n * Wrap the event with an observable\n * @private\n * @param event event name\n * @param element The element to attach the event listener to\n * @returns {Observable}\n */\nfunction wrapEventObservable(event, element) {\n    element =\n        typeof window !== 'undefined' && element\n            ? get(window, element)\n            : element || (typeof window !== 'undefined' ? window : {});\n    return fromEvent(element, event);\n}\nexport function checkAvailability(plugin, methodName, pluginName) {\n    var pluginRef, pluginInstance, pluginPackage;\n    if (typeof plugin === 'string') {\n        pluginRef = plugin;\n    }\n    else {\n        pluginRef = plugin.constructor.getPluginRef();\n        pluginName = plugin.constructor.getPluginName();\n        pluginPackage = plugin.constructor.getPluginInstallName();\n    }\n    pluginInstance = getPlugin(pluginRef);\n    if (!pluginInstance || (!!methodName && typeof pluginInstance[methodName] === 'undefined')) {\n        if (typeof window === 'undefined' || !window.cordova) {\n            cordovaWarn(pluginName, methodName);\n            return ERR_CORDOVA_NOT_AVAILABLE;\n        }\n        pluginWarn(pluginName, pluginPackage, methodName);\n        return ERR_PLUGIN_NOT_INSTALLED;\n    }\n    return true;\n}\n/**\n * Checks if _objectInstance exists and has the method/property\n * @private\n */\nexport function instanceAvailability(pluginObj, methodName) {\n    return pluginObj._objectInstance && (!methodName || typeof pluginObj._objectInstance[methodName] !== 'undefined');\n}\nexport function setIndex(args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // ignore resolve and reject in case sync\n    if (opts.sync) {\n        return args;\n    }\n    // If the plugin method expects myMethod(success, err, options)\n    if (opts.callbackOrder === 'reverse') {\n        // Get those arguments in the order [resolve, reject, ...restOfArgs]\n        args.unshift(reject);\n        args.unshift(resolve);\n    }\n    else if (opts.callbackStyle === 'node') {\n        args.push(function (err, result) {\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve(result);\n            }\n        });\n    }\n    else if (opts.callbackStyle === 'object' && opts.successName && opts.errorName) {\n        var obj = {};\n        obj[opts.successName] = resolve;\n        obj[opts.errorName] = reject;\n        args.push(obj);\n    }\n    else if (typeof opts.successIndex !== 'undefined' || typeof opts.errorIndex !== 'undefined') {\n        var setSuccessIndex = function () {\n            // If we've specified a success/error index\n            if (opts.successIndex > args.length) {\n                args[opts.successIndex] = resolve;\n            }\n            else {\n                args.splice(opts.successIndex, 0, resolve);\n            }\n        };\n        var setErrorIndex = function () {\n            // We don't want that the reject cb gets spliced into the position of an optional argument that has not been\n            // defined and thus causing non expected behavior.\n            if (opts.errorIndex > args.length) {\n                args[opts.errorIndex] = reject; // insert the reject fn at the correct specific index\n            }\n            else {\n                args.splice(opts.errorIndex, 0, reject); // otherwise just splice it into the array\n            }\n        };\n        if (opts.successIndex > opts.errorIndex) {\n            setErrorIndex();\n            setSuccessIndex();\n        }\n        else {\n            setSuccessIndex();\n            setErrorIndex();\n        }\n    }\n    else {\n        // Otherwise, let's tack them on to the end of the argument list\n        // which is 90% of cases\n        args.push(resolve);\n        args.push(reject);\n    }\n    return args;\n}\nexport function callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // Try to figure out where the success/error callbacks need to be bound\n    // to our promise resolve/reject handlers.\n    args = setIndex(args, opts, resolve, reject);\n    var availabilityCheck = checkAvailability(pluginObj, methodName);\n    if (availabilityCheck === true) {\n        var pluginInstance = getPlugin(pluginObj.constructor.getPluginRef());\n        return pluginInstance[methodName].apply(pluginInstance, args);\n    }\n    else {\n        return availabilityCheck;\n    }\n}\nexport function callInstance(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    args = setIndex(args, opts, resolve, reject);\n    if (instanceAvailability(pluginObj, methodName)) {\n        return pluginObj._objectInstance[methodName].apply(pluginObj._objectInstance, args);\n    }\n}\nexport function getPlugin(pluginRef) {\n    if (typeof window !== 'undefined') {\n        return get(window, pluginRef);\n    }\n    return null;\n}\nexport function get(element, path) {\n    var paths = path.split('.');\n    var obj = element;\n    for (var i = 0; i < paths.length; i++) {\n        if (!obj) {\n            return null;\n        }\n        obj = obj[paths[i]];\n    }\n    return obj;\n}\nexport function pluginWarn(pluginName, plugin, method) {\n    if (method) {\n        console.warn('Native: tried calling ' + pluginName + '.' + method + ', but the ' + pluginName + ' plugin is not installed.');\n    }\n    else {\n        console.warn(\"Native: tried accessing the \" + pluginName + \" plugin but it's not installed.\");\n    }\n    if (plugin) {\n        console.warn(\"Install the \" + pluginName + \" plugin: 'ionic cordova plugin add \" + plugin + \"'\");\n    }\n}\n/**\n * @private\n * @param pluginName\n * @param method\n */\nexport function cordovaWarn(pluginName, method) {\n    if (typeof process === 'undefined') {\n        if (method) {\n            console.warn('Native: tried calling ' +\n                pluginName +\n                '.' +\n                method +\n                ', but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\n        }\n        else {\n            console.warn('Native: tried accessing the ' +\n                pluginName +\n                ' plugin but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\n        }\n    }\n}\n/**\n * @private\n */\nexport var wrap = function (pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            // Sync doesn't wrap the plugin with a promise or observable, it returns the result as-is\n            return callCordovaPlugin(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return wrapObservable(pluginObj, methodName, args, opts);\n        }\n        else if (opts.eventObservable && opts.event) {\n            return wrapEventObservable(opts.event, opts.element);\n        }\n        else if (opts.otherPromise) {\n            return wrapOtherPromise(pluginObj, methodName, args, opts);\n        }\n        else {\n            return wrapPromise(pluginObj, methodName, args, opts);\n        }\n    };\n};\n/**\n * @private\n */\nexport function wrapInstance(pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            return callInstance(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return new Observable(function (observer) {\n                var pluginResult;\n                if (opts.destruct) {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.next(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.error(args);\n                    });\n                }\n                else {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                }\n                if (pluginResult && pluginResult.error) {\n                    observer.error(pluginResult.error);\n                }\n                return function () {\n                    try {\n                        if (opts.clearWithArgs) {\n                            return callInstance(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                        }\n                        return callInstance(pluginObj, opts.clearFunction, []);\n                    }\n                    catch (e) {\n                        console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                        console.warn(e);\n                    }\n                };\n            });\n        }\n        else if (opts.otherPromise) {\n            return getPromise(function (resolve, reject) {\n                var result;\n                if (opts.destruct) {\n                    result = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    result = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                if (result && result.then) {\n                    result.then(resolve, reject);\n                }\n                else {\n                    reject();\n                }\n            });\n        }\n        else {\n            var pluginResult_1, rej_1;\n            var p = getPromise(function (resolve, reject) {\n                if (opts.destruct) {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                rej_1 = reject;\n            });\n            // Angular throws an error on unhandled rejection, but in this case we have already printed\n            // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n            // to error\n            if (pluginResult_1 && pluginResult_1.error) {\n                p.catch(function () { });\n                typeof rej_1 === 'function' && rej_1(pluginResult_1.error);\n            }\n            return p;\n        }\n    };\n}\n","import { Observable } from 'rxjs';\nimport { checkAvailability, getPlugin } from './common';\nfunction overrideFunction(pluginObj, methodName) {\n    return new Observable(function (observer) {\n        var availabilityCheck = checkAvailability(pluginObj, methodName);\n        if (availabilityCheck === true) {\n            var pluginInstance_1 = getPlugin(pluginObj.constructor.getPluginRef());\n            pluginInstance_1[methodName] = observer.next.bind(observer);\n            return function () { return (pluginInstance_1[methodName] = function () { }); };\n        }\n        else {\n            observer.error(availabilityCheck);\n            observer.complete();\n        }\n    });\n}\nexport function cordovaFunctionOverride(pluginObj, methodName, args) {\n    if (args === void 0) { args = []; }\n    return overrideFunction(pluginObj, methodName);\n}\n","import { wrapInstance } from './common';\nexport function cordovaInstance(pluginObj, methodName, config, args) {\n    args = Array.from(args);\n    return wrapInstance(pluginObj, methodName, config).apply(this, args);\n}\n","import { checkAvailability, getPlugin } from './common';\nexport function cordovaPropertyGet(pluginObj, key) {\n    if (checkAvailability(pluginObj, key) === true) {\n        return getPlugin(pluginObj.constructor.getPluginRef())[key];\n    }\n    return null;\n}\nexport function cordovaPropertySet(pluginObj, key, value) {\n    if (checkAvailability(pluginObj, key) === true) {\n        getPlugin(pluginObj.constructor.getPluginRef())[key] = value;\n    }\n}\n","import { wrap } from './common';\nexport function cordova(pluginObj, methodName, config, args) {\n    return wrap(pluginObj, methodName, config).apply(this, args);\n}\n","export function instancePropertyGet(pluginObj, key) {\n    if (pluginObj._objectInstance && pluginObj._objectInstance[key]) {\n        return pluginObj._objectInstance[key];\n    }\n    return null;\n}\nexport function instancePropertySet(pluginObj, key, value) {\n    if (pluginObj._objectInstance) {\n        pluginObj._objectInstance[key] = value;\n    }\n}\n","export {};\n","import { checkReady } from './bootstrap';\nexport { IonicNativePlugin } from './ionic-native-plugin';\n// Decorators\nexport { checkAvailability, instanceAvailability, wrap, getPromise } from './decorators/common';\nexport * from './decorators/cordova';\nexport * from './decorators/cordova-function-override';\nexport * from './decorators/cordova-instance';\nexport * from './decorators/cordova-property';\nexport * from './decorators/instance-property';\nexport * from './decorators/interfaces';\ncheckReady();\n\n","import { checkAvailability } from './decorators/common';\nimport { get } from './util';\nvar IonicNativePlugin = /** @class */ (function () {\n    function IonicNativePlugin() {\n    }\n    /**\n     * Returns a boolean that indicates whether the plugin is installed\n     * @return {boolean}\n     */\n    IonicNativePlugin.installed = function () {\n        var isAvailable = checkAvailability(this.pluginRef) === true;\n        return isAvailable;\n    };\n    /**\n     * Returns the original plugin object\n     */\n    IonicNativePlugin.getPlugin = function () {\n        if (typeof window !== 'undefined') {\n            return get(window, this.pluginRef);\n        }\n        return null;\n    };\n    /**\n     * Returns the plugin's name\n     */\n    IonicNativePlugin.getPluginName = function () {\n        var pluginName = this.pluginName;\n        return pluginName;\n    };\n    /**\n     * Returns the plugin's reference\n     */\n    IonicNativePlugin.getPluginRef = function () {\n        var pluginRef = this.pluginRef;\n        return pluginRef;\n    };\n    /**\n     * Returns the plugin's install name\n     */\n    IonicNativePlugin.getPluginInstallName = function () {\n        var plugin = this.plugin;\n        return plugin;\n    };\n    /**\n     * Returns the plugin's supported platforms\n     */\n    IonicNativePlugin.getSupportedPlatforms = function () {\n        var platform = this.platforms;\n        return platform;\n    };\n    IonicNativePlugin.pluginName = '';\n    IonicNativePlugin.pluginRef = '';\n    IonicNativePlugin.plugin = '';\n    IonicNativePlugin.repo = '';\n    IonicNativePlugin.platforms = [];\n    IonicNativePlugin.install = '';\n    return IonicNativePlugin;\n}());\nexport { IonicNativePlugin };\n","/**\n * @private\n */\nexport function get(element, path) {\n    var paths = path.split('.');\n    var obj = element;\n    for (var i = 0; i < paths.length; i++) {\n        if (!obj) {\n            return null;\n        }\n        obj = obj[paths[i]];\n    }\n    return obj;\n}\n/**\n * @private\n */\nexport function getPromise(callback) {\n    if (callback === void 0) { callback = function () { }; }\n    var tryNativePromise = function () {\n        if (typeof Promise === 'function' || (typeof window !== 'undefined' && window.Promise)) {\n            return new Promise(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        else {\n            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\n        }\n    };\n    return tryNativePromise();\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProductsPage } from './products.page';\nimport { DashboardPage } from '../dashboard/dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsPage\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProductsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProductsPageRoutingModule } from './products-routing.module';\n\nimport { ProductsPage } from './products.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProductsPageRoutingModule\n  ],\n  declarations: [ProductsPage]\n})\nexport class ProductsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.page.html',\n  styleUrls: ['./products.page.scss'],\n})\nexport class ProductsPage implements OnInit {\n\n  constructor(private barcodeScanner: BarcodeScanner) { }\n\n  ngOnInit() {\n  }\n\n  QRBoton(){\n    this.barcodeScanner.scan().then(barcodeData => {\n      console.log('Barcode data', barcodeData);\n     }).catch(err => {\n         console.log('Error', err);\n     });\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-title>Productos</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button icon-right routerLink=\\\"/home\\\" color=\\\"success\\\">  \\n        <ion-icon name=\\\"exit-outline\\\" > </ion-icon>  </ion-button>\\n    </ion-buttons>    \\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content style=\\\"text-align:center\\\">\\n  <ion-card>\\n    <img src=\\\"https://ellafashion.com/images/content/digital-price-tag-on-garnment.jpg\\\">\\n    <h1>Camisa Blanca </h1>\\n    <h2>Cuello tipo b</h2>\\n    <br>\\n  </ion-card> \\n  <br>\\n  <ion-button (click)=\\\"QRBoton()\\\" color=\\\"success\\\"> Lector QR\\n    <ion-icon name=\\\"qr-code-outline\\\"> </ion-icon>  </ion-button>\\n</ion-content>\\n\\n\";"],"names":[],"sourceRoot":"webpack:///"}